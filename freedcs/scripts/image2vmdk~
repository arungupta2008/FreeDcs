#!/usr/bin/env bash
ip_type=$1
ip=$2
netmask=$3
arc=$4
echo " At Image to Vmdk values at input $*"
qemu-img create -f raw myrootfs.vmdk.tmp 256M
parted --script myrootfs.vmdk.tmp mklabel msdos
parted --script -- myrootfs.vmdk.tmp mkpart primary ext2 0% 100%
kpartx -av myrootfs.vmdk.tmp
mount_device=$(kpartx -l myrootfs.vmdk.tmp | awk '{print $1}')
echo "Mapped Device is :"$mount_device
loop_folder="loop3"

##If this drive is not present.
if [ ! -d /mnt/$loop_folder ]
then
	echo "Creating new $loop_folder Folder"
	mkdir /mnt/$loop_folder
fi
#unmounting if any thing is mounted before in this folder(if present).
umount /mnt/$loop_folder/
echo "$loop_folder Folder is present and free to use!!!"

echo "mounting $mount_device to $loop_folder"
mkfs.ext3 -q -F /dev/mapper/$mount_device -L /
mount -o loop /dev/mapper/$mount_device /mnt/$loop_folder

echo "Mounting Complete"

cp ./build/$arc/buildroot-2011.11/output/images/rootfs.tar /mnt/$loop_folder
cd /mnt/$loop_folder

tar xvf rootfs.tar
rm rootfs.tar

#add entries to configure the eth0 network interface. You would need to change this if you want static ip address.
echo "auto eth0" >> /mnt/$loop_folder/etc/network/interfaces
if [[ $ip_type -eq '1' ]]; then
		echo "iface eth0 inet dhcp" >> /mnt/$loop_folder/etc/network/interfaces
	else
		echo "iface eth0 inet static" >> /mnt/$loop_folder/etc/network/interfaces
		echo "ipaddress $ip" >> /mnt/$loop_folder/etc/network/interfaces
		echo "netmask $netmask" >> /mnt/$loop_folder/etc/network/interfaces
fi
sed -i 's/start)/ start) \n \t modprobe pcnet32/' etc/init.d/S40network

echo "added Interface type and IP"
#create freedcs dir in the home folder.
mkdir /mnt/$loop_folder/home/freedcs

	if [ ! -f /mnt/$loop_folder/boot/grub/menu.lst ]
	then
		echo "There is some error in creating the Root.fs file please check the configuration files";
	exit;
	fi

echo -e "default=0\ntimeout=0\nroot (hd0,0)\ntitle freedcs_$arc\nkernel /boot/u-boot.bin root=/dev/sda1" > /mnt/$loop_folder/boot/grub/menu.lst
cd -

umount /mnt/$loop_folder/
kpartx -d myrootfs.vmdk.tmp
echo -e "device (hd0) myrootfs.vmdk.tmp\nroot (hd0,0)\nsetup (hd0)" | grub --batch

qemu-img convert -f raw myrootfs.vmdk.tmp -O vmdk myrootfs_$arc.vmdk
mv myrootfs_$arc.vmdk ./vm_controller/
rm myrootfs.vmdk.tmp
